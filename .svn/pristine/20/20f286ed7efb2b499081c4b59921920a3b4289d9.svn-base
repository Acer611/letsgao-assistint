package com.umessage.letsgo.assistant.controller;

import com.umessage.letsgo.assistant.common.exception.BusinessException;
import com.umessage.letsgo.assistant.common.helper.UserLoginHelper;
import com.umessage.letsgo.assistant.model.WeChatOrderInfoEntity;
import com.umessage.letsgo.assistant.service.IWeChatInfoService;
import com.umessage.letsgo.assistant.service.IWeChatOrderInfoService;
import com.umessage.letsgo.assistant.service.IWeChatSendMessageService;
import com.umessage.letsgo.assistant.wechat.security.WxUser;
import me.chanjar.weixin.common.exception.WxErrorException;
import me.chanjar.weixin.mp.api.WxMpService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import java.util.HashMap;
import java.util.Map;

/**
 * Created by ZhaoYidong on 2016/12/15.
 */
@Controller
@RequestMapping("/wechat/orderinfo")
public class WeChatOrderInfoController {

    private final Logger logger = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private IWeChatOrderInfoService wechatOrderInfoService;
    @Autowired
    private IWeChatSendMessageService weChatSendMessageService;
    @Autowired
    private WxMpService wxService;
    @Autowired
    private UserLoginHelper loginHelper;
    @Autowired
    private IWeChatInfoService weChatInfoService;




    /**
     * 根据id查询订单
     * @param id
     * @param model
     * @return
     */
    @RequestMapping("/select")
    public String select(Long id, Model model){
        WeChatOrderInfoEntity orderInfoEntity = wechatOrderInfoService.select(id);
        model.addAttribute("wechatOrderInfoEntities",orderInfoEntity);
        return "user/pay";
    }


    /**
     * 用户查看订单列表
     * @param model
     * @return
     */
    @RequestMapping("/selectByCustomerOpenid")
    public String selectByCustomerOpenid( HttpServletRequest request, Model model ) throws WxErrorException {
        logger.info("进入获取用户订单列表方法");
        WxUser wxUser = loginHelper.getWxUser();
        String customerOpenid = wxUser.getUsername();
        //String customerOpenid = "oy6Qtw6pICdD86JKObwBdoV3cZjA";
        String pageNumber = request.getParameter("pageNumber");
        String pageSize = request.getParameter("pageSize");
        Map resultMap = wechatOrderInfoService.selectByCustomerOpenid(customerOpenid,pageNumber,pageSize);
        logger.info("获取用户订单列表完成");
        model.addAttribute("resultMap",resultMap);
        return "user/userorderlist";
    }

    @RequestMapping("/selectByCustomerOpenidPages")
    @ResponseBody
    public Map selectByCustomerOpenidPages( HttpServletRequest request, Model model ) throws WxErrorException {

        WxUser wxUser = loginHelper.getWxUser();
        String customerOpenid = wxUser.getUsername();
        String pageNumber = request.getParameter("pageNumber");
        String pageSize = request.getParameter("pageSize");
        Map resultMap = wechatOrderInfoService.selectByCustomerOpenid(customerOpenid,pageNumber,pageSize);

        model.addAttribute("resultMap",resultMap);
        return resultMap;
    }

    /**
     * 下单用户查看待支付订单
     * @param model
     * @return
     */
    @RequestMapping("/selectByStatus")
    public String selectByStatus(Long id, Model model){
        logger.info("进入获取订单表页");
        WxUser wxUser = loginHelper.getWxUser();
        String customerOpenid = wxUser.getUsername();
        WeChatOrderInfoEntity wechatOrderInfoEntities = wechatOrderInfoService.selectByStatus(id);
        model.addAttribute("wechatOrderInfoEntities",wechatOrderInfoEntities);

        logger.info("获取支付信息和生成与支付payID");
        Map resultMap = wechatOrderInfoService.createPayInfo(customerOpenid);
        String packageInfo = resultMap.get("package").toString();
        String payid = packageInfo.substring(packageInfo.indexOf("=")+1,packageInfo.length());
        WeChatOrderInfoEntity wechatOrderInfoEntity = new WeChatOrderInfoEntity();
        wechatOrderInfoEntity.setId(Long.parseLong(customerOpenid));
        wechatOrderInfoEntity.setPayId(payid);
        wechatOrderInfoEntity.setStatus(0);
        logger.info("更新订单表中的支付状态和payId 字段");
        wechatOrderInfoService.update(wechatOrderInfoEntity);
        model.addAttribute("payInfoMap",resultMap);

        return "user/pay";
    }

    /**
     * 更改支付状态
     * @param id
     * @return
     */
    @RequestMapping("/updateStatus")
    @ResponseBody
    public Map<String,Object> updateStatus(Long id) throws BusinessException {
        Map<String,Object> map = new HashMap<>();
        try {
            wechatOrderInfoService.updateStatus(id);
            map.put("result",0);
            map.put("message","更新状态成功");
        }catch (Exception e){
            System.out.println(e.getMessage());
            map.put("result",-1);
            map.put("message","更新状态失败");
        }
        return map;
    }

    /**
     * 推荐人查询订单收益
     * @param model
     * @return
     */
    @RequestMapping("/selectBySellerOpenid")
    public String selectBySellerOpenid( HttpServletRequest request,Model model){
        logger.info("进入导游查看收益方法");
        WxUser wxUser = loginHelper.getWxUser();
        String sellerOpenid = wxUser.getUsername();
        String pageNumber = request.getParameter("pageNumber");
        String pageSize = request.getParameter("pageSize");
        Map map = wechatOrderInfoService.selectBySellerOpenid(sellerOpenid,pageNumber,pageSize);
        logger.info("导游查看收益获取数据完成");
        model.addAttribute("resultMap",map);
        return "guide/dlist";
    }


    /**
     * 推荐人查询订单收益分页方法
     * @param request
     * @param model
     * @return
     */
    @RequestMapping("/selectBySellerOpenidPages")
    @ResponseBody
    public Map selectBySellerOpenidPages( HttpServletRequest request,Model model){
        //TODO LoginUser user （获取当前登陆用户的openID）
        WxUser wxUser = loginHelper.getWxUser();
        String sellerOpenid = wxUser.getUsername();
        String pageNumber = request.getParameter("pageNumber");
        String pageSize = request.getParameter("pageSize");
        Map map = wechatOrderInfoService.selectBySellerOpenid(sellerOpenid,pageNumber,pageSize);
        model.addAttribute("resultMap",map);
        return map;
    }






}
