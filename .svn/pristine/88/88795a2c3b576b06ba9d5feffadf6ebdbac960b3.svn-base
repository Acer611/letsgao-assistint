package com.umessage.letsgo.assistant.controller;

import com.umessage.letsgo.assistant.model.WechatOrderInfoEntity;
import com.umessage.letsgo.assistant.service.IWechatOrderInfoService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by ZhaoYidong on 2016/12/15.
 */
@Controller
@RequestMapping("/orderinfo")
public class WechatOrderInfoController {
    @Autowired
    private IWechatOrderInfoService wechatOrderInfoService;

    /**
     * 生成订单
     * @param
     * @return
     */
    @RequestMapping("/insert")
    @ResponseBody
    public Map<String,Object> insert(){
        WechatOrderInfoEntity orderInfoEntity = new WechatOrderInfoEntity();
        orderInfoEntity.setOrderId("84546846777");
        orderInfoEntity.setProverder("5555555");
        orderInfoEntity.setCustomerName("所有订单");
        orderInfoEntity.setPhone("15688883333");
        Map<String,Object> map = new HashMap<>();
        try {
            wechatOrderInfoService.insert(orderInfoEntity);
            map.put("result",0);
            map.put("message","添加成功");
        }catch (Exception e){
            System.out.println(e.getMessage());
            map.put("result",-1);
            map.put("message","添加失败");
        }
        return map;
    }

    /**
     * 根据id查询订单
     * @param id
     * @param model
     * @return
     */
    @RequestMapping("/select")
    public String select(Long id, Model model){
        WechatOrderInfoEntity orderInfoEntity = wechatOrderInfoService.select(id);
        model.addAttribute("orderInfoEntity",orderInfoEntity);
        return "hello";
    }

    /**
     * 更新订单
     * @param
     * @return
     */
    @RequestMapping("/update")
    @ResponseBody
    public Map<String,Object> update(WechatOrderInfoEntity orderInfoEntity){
        Map<String,Object> map = new HashMap<>();
        try {
            wechatOrderInfoService.update(orderInfoEntity);
            map.put("result",0);
            map.put("message","更新成功");
        }catch (Exception e){
            System.out.println(e.getMessage());
            map.put("result",-1);
            map.put("message","更新失败");
        }
        return map;
    }

    /**
     * 取消订单
     * @param id
     * @return
     */
    @RequestMapping("/delete")
    @ResponseBody
    public String delete(Long id){
        Map<String,Object> map = new HashMap<>();
        try {
            wechatOrderInfoService.delete(id);
            map.put("result",0);
            map.put("message","删除成功");
        }catch (Exception e){
            System.out.println(e.getMessage());
            map.put("result",-1);
            map.put("message","删除失败");
        }
        return "hello";
    }

    /**
     * 用户查看订单列表
     * @param customerOpenid
     * @param model
     * @return
     */
    @RequestMapping("/selectByCustomerOpenid")
    public String selectByCustomerOpenid(String customerOpenid, Model model){
        List<WechatOrderInfoEntity> wechatOrderInfoEntities = wechatOrderInfoService.selectByCustomerOpenid(customerOpenid);
        model.addAttribute("wechatOrderInfoEntities",wechatOrderInfoEntities);
        return "hello";
    }

    @RequestMapping("/updateStatus")
    @ResponseBody
    public Map<String,Object> updateStatus(Long id){
        Map<String,Object> map = new HashMap<>();
        try {
            wechatOrderInfoService.updateStatus(id);
            map.put("result",0);
            map.put("message","更新状态成功");
        }catch (Exception e){
            System.out.println(e.getMessage());
            map.put("result",-1);
            map.put("message","更新状态失败");
        }
        return map;
    }

    /**
     * 推荐人查询订单收益
     * @param sellerOpenid
     * @param model
     * @return
     */
    @RequestMapping("/selectBySellerOpenid")
    public String selectBySellerOpenid(String sellerOpenid,Model model){
        List<WechatOrderInfoEntity> wechatOrderInfoEntities = wechatOrderInfoService.selectBySellerOpenid(sellerOpenid);
        for (WechatOrderInfoEntity wechatOrderInfoEntity:wechatOrderInfoEntities) {
            Double totalFee = wechatOrderInfoEntity.getTotalFee();
            Double realFee = wechatOrderInfoEntity.getRealFee();
            Double reward = wechatOrderInfoEntity.getReward();
            double reslutRe = totalFee - realFee * reward;
            wechatOrderInfoEntity.setSellerReward(reslutRe);
        }
        model.addAttribute("wechatOrderInfoEntities",wechatOrderInfoEntities);
        return "hello";
    }

}
